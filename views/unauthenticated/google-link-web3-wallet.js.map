{"version":3,"file":"google-link-web3-wallet.js","sourceRoot":"","sources":["../../../src/views/unauthenticated/google-link-web3-wallet.ts"],"names":[],"mappings":"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","sourcesContent":["import { openWalletConnectModal, tokenManager, wagmiConfig } from '@gaiaprotocol/client-common';\nimport { SlButton } from '@shoelace-style/shoelace';\nimport { disconnect, getAccount, watchAccount } from '@wagmi/core';\nimport { el } from \"@webtaku/el\";\nimport Navigo from \"navigo\";\nimport { googleLogout } from '../../auth/google-login';\nimport { requestLogin } from '../../auth/login';\nimport { signMessage } from '../../auth/siwe';\nimport { showErrorAlert } from '../../components/alert';\nimport { hideLoading, showLoading } from '../../components/loading';\nimport { isWebView, platform } from '../../platform';\nimport { View } from \"../view\";\nimport './login.css';\n\nasync function ensureWalletConnected(): Promise<`0x${string}`> {\n  const account = getAccount(wagmiConfig);\n  if (!account.isConnected || !account.address) {\n    throw new Error('지갑 연결이 필요합니다.');\n  }\n  return account.address;\n}\n\nasync function handleLoginClick(router: Navigo) {\n  try {\n    const address = await ensureWalletConnected();\n    const signature = await signMessage(address);\n    const token = await requestLogin(address, signature);\n\n    tokenManager.set(token, address);\n\n    let href = '/'\n    if (platform) {\n      href = `/?platform=${platform}`\n      if (isWebView) href += '&source=webview'\n    } else if (isWebView) href = '/?source=webview'\n    location.href = href;\n\n  } catch (err) {\n    console.error(err);\n    showErrorAlert('Error', err instanceof Error ? err.message : String(err));\n  }\n}\n\nexport function createGoogleLinkWeb3WalletView(router: Navigo): View {\n  const title = el('h1.login-title', 'Link your Web3 Wallet');\n  const description = el(\n    'p.login-description',\n    'You’re signed in with Google. Connect your wallet and sign a message to link it to your account.'\n  );\n\n  // ── 구글 로그아웃 핸들러 ─────────────────────────────────────────────\n  const handleGoogleLogout = async () => {\n    showLoading();\n    try {\n      // 서버 세션 종료\n      await googleLogout()\n\n      // 토큰/지갑 상태 정리\n      try {\n        tokenManager.clear(); // clear 메서드가 있으면 사용\n      } catch { }\n      try {\n        await disconnect(wagmiConfig);\n      } catch { }\n\n      // 로그인 페이지로 이동\n      router.navigate('/login');\n    } catch (err) {\n      console.error(err);\n      showErrorAlert('Logout failed', err instanceof Error ? err.message : String(err));\n    } finally {\n      hideLoading();\n    }\n  };\n\n  // ── 1) 지갑 연결/해제 버튼 ─────────────────────────────────────────\n  const connectButton = el(\n    'sl-button.login-button',\n    {\n      variant: 'primary',\n      onclick: () => {\n        if (getAccount(wagmiConfig).isConnected) {\n          disconnect(wagmiConfig);\n          linkButton.loading = false;\n        } else {\n          openWalletConnectModal();\n        }\n      }\n    },\n    '1. Connect Wallet'\n  ) as SlButton;\n\n  // ── 2) 링크(서명) 버튼 ────────────────────────────────────────────\n  const isConnected = getAccount(wagmiConfig).isConnected;\n  const linkButton = el(\n    'sl-button.login-button',\n    {\n      variant: isConnected ? 'primary' : 'default',\n      disabled: !isConnected,\n      onclick: async () => {\n        linkButton.loading = true;\n        try {\n          await handleLoginClick(router);\n        } finally {\n          linkButton.loading = false;\n        }\n      }\n    },\n    '2. Link Wallet'\n  ) as SlButton;\n\n  // ── 3) 구글 로그아웃 버튼 ─────────────────────────────────────────\n  const googleLogoutButton = el(\n    'sl-button.login-button.google-logout',\n    {\n      variant: 'default',\n      'aria-label': 'Logout from Google',\n      onclick: handleGoogleLogout\n    },\n    'Sign out of Google'\n  ) as SlButton;\n\n  // 레이아웃\n  const wrapper = el(\n    '.login-wrapper',\n    title,\n    description,\n    connectButton,\n    linkButton,\n    el('.login-or',\n      el('span.login-or-line'),\n      el('span.login-or-text', '— or —'),\n      el('span.login-or-line'),\n    ),\n    googleLogoutButton\n  );\n\n  // 지갑 상태 변경 감지\n  const unwatch = watchAccount(wagmiConfig, {\n    onChange(account) {\n      if (account.isConnected) {\n        connectButton.textContent = 'Disconnect Wallet';\n        connectButton.variant = 'default';\n        linkButton.disabled = false;\n        linkButton.variant = 'primary';\n      } else {\n        connectButton.textContent = '1. Connect Wallet';\n        connectButton.variant = 'primary';\n        linkButton.disabled = true;\n        linkButton.variant = 'default';\n      }\n    }\n  });\n\n  return {\n    el: wrapper,\n    remove: () => {\n      wrapper.remove();\n      unwatch();\n    }\n  };\n}\n"]}