{"version":3,"file":"login.js","sourceRoot":"","sources":["../../../src/views/unauthenticated/login.ts"],"names":[],"mappings":"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","sourcesContent":["import { openWalletConnectModal, tokenManager, wagmiConfig } from '@gaiaprotocol/client-common';\nimport { SlButton } from '@shoelace-style/shoelace';\nimport { disconnect, getAccount, watchAccount } from '@wagmi/core';\nimport { el } from '@webtaku/el';\nimport Navigo from 'navigo';\nimport { requestLogin } from '../../auth/login';\nimport { signMessage } from '../../auth/siwe';\nimport { showErrorAlert } from '../../components/alert';\nimport { View } from '../view';\nimport './login.css';\nimport logoImage from './logo.png';\n\nasync function ensureWalletConnected(): Promise<`0x${string}`> {\n  const account = getAccount(wagmiConfig);\n  if (!account.isConnected || !account.address) {\n    throw new Error('지갑 연결이 필요합니다.');\n  }\n  return account.address;\n}\n\nasync function handleLoginClick(router: Navigo) {\n  try {\n    const address = await ensureWalletConnected();\n    const signature = await signMessage(address);\n    const token = await requestLogin(address, signature);\n\n    tokenManager.set(token, address);\n    router.navigate('/');\n  } catch (err) {\n    console.error(err);\n    showErrorAlert('오류', err instanceof Error ? err.message : String(err));\n  }\n}\n\nexport function createLoginView(router: Navigo): View {\n  const logo = el('img.login-logo', {\n    src: logoImage,\n    alt: 'Mate App Logo',\n  });\n\n  const description = el(\n    'p.login-description',\n    '지갑을 연결하고 메시지에 서명해\\nMate에 접속하세요.',\n  );\n\n  const connectButton = el(\n    'sl-button.login-button',\n    {\n      variant: 'primary',\n      onclick: () => {\n        if (getAccount(wagmiConfig).isConnected) {\n          disconnect(wagmiConfig);\n          signButton.loading = false;\n        } else {\n          openWalletConnectModal();\n        }\n      }\n    },\n    '1. 지갑 연결'\n  ) as SlButton;\n\n  const isConnected = getAccount(wagmiConfig).isConnected;\n  const signButton = el(\n    'sl-button.login-button',\n    {\n      variant: isConnected ? 'primary' : 'default',\n      disabled: !isConnected,\n      onclick: async () => {\n        signButton.loading = true;\n        try {\n          await handleLoginClick(router);\n        } finally {\n          signButton.loading = false;\n        }\n      }\n    },\n    '2. 메시지 서명'\n  ) as SlButton;\n\n  function isAndroidWebView() {\n    const urlParams = new URLSearchParams(window.location.search);\n    const platform = urlParams.get('platform');\n    const source = urlParams.get('source');\n\n    return platform === 'android' && source === 'webview';\n  }\n\n  const wrapper = el(\n    '.login-wrapper',\n    logo,\n    description,\n    el(\n      'sl-alert.klip-alert',\n      {\n        open: true,\n      },\n      el('sl-icon', { slot: 'icon', name: 'info-circle' }),\n      isAndroidWebView() ?\n        `👋 Google Play 검토팀께,\n이 앱에 대한 접근 안내는 Play Console의 \"앱 액세스 안내\" 항목에 모두 작성되어 있습니다.\n앱 테스트를 위해 필요한 지침은 해당 항목을 참고해 주세요.\n검토해 주셔서 감사합니다!` :\n        'Klip을 사용하시는 경우, WalletConnect를 통해 접속해주세요.'\n    ),\n    connectButton,\n    signButton,\n  );\n\n  const unwatch = watchAccount(wagmiConfig, {\n    onChange(account) {\n      if (account.isConnected) {\n        connectButton.textContent = '지갑 연결 해제';\n        connectButton.variant = 'default';\n        signButton.disabled = false;\n        signButton.variant = 'primary';\n      } else {\n        connectButton.textContent = '1. 지갑 연결';\n        connectButton.variant = 'primary';\n        signButton.disabled = true;\n        signButton.variant = 'default';\n      }\n    }\n  });\n\n  return {\n    el: wrapper,\n    remove: () => {\n      wrapper.remove();\n      unwatch();\n    }\n  };\n}\n"]}