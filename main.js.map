{"version":3,"file":"main.js","sourceRoot":"","sources":["../src/main.ts"],"names":[],"mappings":"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","sourcesContent":["import { chatProfileService } from '@gaiaprotocol/chat-client';\nimport { createRainbowKit, tokenManager } from '@gaiaprotocol/client-common';\nimport { BackButtonEvent, setupConfig } from '@ionic/core';\nimport { defineCustomElements } from '@ionic/core/loader';\nimport { initializeApp } from 'firebase/app';\nimport { getMessaging } from 'firebase/messaging';\nimport Navigo from 'navigo';\nimport { getAddress } from 'viem';\nimport { fetchMainNftsWithInfo } from './api/main-nfts-with-info';\nimport { fetchProfiles } from './api/profile';\nimport { validateToken } from './auth/validate';\nimport './main.css';\nimport { createChatRoomView } from './views/authenticated/chatroom';\nimport { createHomeView } from './views/authenticated/home';\nimport { createLayoutView } from './views/authenticated/layout';\nimport { createLoginView } from './views/unauthenticated/login';\nimport { View } from './views/view';\n\nconst BASE_PATH = process.env.NODE_ENV === 'production' ? '/mate-app/' : '/';\n\nsetupConfig({\n  hardwareBackButton: true,\n  experimentalCloseWatcher: true\n});\n\nconst backHandler = (event: BackButtonEvent) => {\n  event.detail.register(0, () => {\n    const hasHistory = window.history.length > 1;\n    const isFromExternal = document.referrer && !document.referrer.startsWith(window.location.origin);\n    if (!hasHistory || isFromExternal) {\n      document.removeEventListener('ionBackButton' as any, backHandler);\n    }\n    window.history.back();\n  });\n};\ndocument.addEventListener('ionBackButton' as any, backHandler);\n\ndefineCustomElements(window);\ndocument.documentElement.setAttribute('mode', 'ios');\ndocument.body.appendChild(createRainbowKit());\n\nconst urlParams = new URLSearchParams(window.location.search);\nconst isWebView = urlParams.get('source') === 'webview';\nif (!isWebView) {\n\n  const firebaseConfig = {\n    apiKey: 'AIzaSyBbwkLP-C61kWmzCq-pFdvSJXHHUjmoRK0',\n    authDomain: 'mate-ba361.firebaseapp.com',\n    projectId: 'mate-ba361',\n    storageBucket: 'mate-ba361.firebasestorage.app',\n    messagingSenderId: '996341622273',\n    appId: '1:996341622273:web:f1a110eea9820b30ad8200',\n    measurementId: 'G-1V0KFDFZTF'\n  };\n\n  // Initialize Firebase\n  const app = initializeApp(firebaseConfig);\n  const messaging = getMessaging(app);\n\n  async function requestNotificationPermission() {\n    return new Promise<NotificationPermission>((resolve) => {\n      Notification.requestPermission((permission) => resolve(permission));\n    });\n  }\n\n  /*requestNotificationPermission().then((permission) => {\n    if (permission === \"granted\") {\n      getToken(messaging, { vapidKey: 'BM3LFF_FNEgmlM6lvonw-qwKHQYp2tdTKuSUmo2CRi6yJwmRMyK77C2yboTUswiWGvzMad26W5GljYgMkC8lgfY' }).then((token) => {\n        console.log(token);\n      });\n    } else {\n      console.log(\"Permission denied:\", permission);\n    }\n  });*/\n}\n\nfunction getCurrentCollectionFromPath(): string | null {\n  let path = location.pathname || '';\n\n  if (path.startsWith(BASE_PATH)) {\n    path = path.slice(BASE_PATH.length);\n  }\n\n  const seg = path.split('/').filter(Boolean)[0] || '';\n  return seg || null;\n}\n\nchatProfileService.init(async (addresses) => {\n  const normalized = addresses.map(getAddress);\n  const collection = getCurrentCollectionFromPath();\n\n  // 1) 프로필(닉네임/바이오 등) 그대로 유지\n  const profiles = await fetchProfiles(normalized as unknown as (`0x${string}`)[]);\n\n  // 2) 메인 NFT 이미지: 방(컬렉션)이 있을 때만 조회\n  const nftRows = collection\n    ? await fetchMainNftsWithInfo(collection, normalized)\n    : [];\n\n  const imageMap = new Map<string, string | null>();\n  for (const row of nftRows) {\n    const addr = getAddress(row.user_address);\n    imageMap.set(addr, row.nft?.image ?? null);\n  }\n\n  // 3) chatProfileService 형식으로 합치기\n  const result: Record<string, { nickname?: string | null; profileImage?: string | null } | null> = {};\n  for (const addr of normalized) {\n    const p = profiles[addr as `0x${string}`] ?? null;\n    result[addr] = {\n      nickname: p?.nickname ?? null,\n      profileImage: imageMap.get(addr) ?? null,\n    };\n  }\n  return result;\n});\n\nconst p = urlParams.get('p');\n\nif (p) {\n  // 쿼리스트링을 클리어하고, 라우터로 이동\n  history.replaceState({}, '', p);\n}\n\nconst router = new Navigo(BASE_PATH);\n\nlet layoutView: View | undefined;\nlet contentContainer: HTMLElement | undefined;\nlet loginView: View | undefined;\n\nfunction removeLoginView() {\n  loginView?.remove();\n  loginView = undefined;\n}\n\nfunction requireAuth(next: () => void) {\n  if (!tokenManager.has()) {\n    router.navigate('/login');\n  } else {\n    next();\n  }\n}\n\n/**\n * 최초 로그인 후 layout을 생성하고 content만 교체\n */\nfunction renderContent(content: View) {\n  removeLoginView();\n\n  if (!layoutView) {\n    layoutView = createLayoutView(router);\n    contentContainer = layoutView.el.querySelector('.content') as HTMLElement;\n    contentContainer.appendChild(content.el);\n    document.body.appendChild(layoutView.el);\n  } else {\n    contentContainer!.innerHTML = '';\n    contentContainer!.appendChild(content.el);\n  }\n}\n\n/**\n * layout을 완전히 제거하고 로그인 화면 표시\n */\nfunction renderLogin() {\n  if (layoutView) {\n    layoutView.remove();\n    layoutView = undefined;\n    contentContainer = undefined;\n  }\n  removeLoginView();\n\n  loginView = createLoginView(router);\n  document.body.appendChild(loginView.el);\n}\n\nrouter.on('/', () => {\n  removeLoginView();\n  requireAuth(() => renderContent(createHomeView(router)));\n});\n\nrouter.on('/login', () => {\n  if (layoutView) {\n    layoutView.remove();\n    layoutView = undefined;\n    contentContainer = undefined;\n  }\n\n  if (tokenManager.has()) {\n    router.navigate('/');\n  } else {\n    renderLogin();\n  }\n});\n\nrouter.on('/:roomId', (match) => {\n  const roomId = match?.data?.roomId;\n  if (roomId) {\n    const view = createChatRoomView(router, roomId);\n    renderContent(view);\n    view.scrollToBottom();\n    setTimeout(() => view.scrollToBottom(), 100);\n  } else {\n    router.navigate('/');\n  }\n});\n\n(async () => {\n  const ok = await validateToken();\n  if (!ok) {\n    tokenManager.clear();\n    router.resolve();\n    return;\n  }\n\n  const address = tokenManager.getAddress();\n  if (!address) {\n    tokenManager.clear();\n    router.resolve();\n    return;\n  }\n\n  router.resolve();\n})();\n"]}