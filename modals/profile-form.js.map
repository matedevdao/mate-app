{"version":3,"file":"profile-form.js","sourceRoot":"","sources":["../../src/modals/profile-form.ts"],"names":[],"mappings":"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","sourcesContent":["import { el } from \"@webtaku/el\";\nimport { fetchProfile, setProfile } from \"../api/profile\";\nimport { profileService } from \"../services/profile\";\n\nexport function createProfileFormModal(address: string, token: string) {\n  const modal = el('ion-modal');\n\n  const nicknameInput = el('ion-input', {\n    placeholder: '닉네임',\n    value: '',\n    label: '닉네임',\n    labelPlacement: 'stacked'\n  });\n  const bioInput = el('ion-textarea', {\n    placeholder: '자기소개',\n    value: '',\n    label: '자기소개',\n    labelPlacement: 'stacked'\n  });\n  const saveBtn = el('ion-button', { expand: 'block', disabled: true }, '저장하기');\n\n  // 현재 프로필 불러오기\n  fetchProfile(address as `0x${string}`).then(profile => {\n    nicknameInput.value = profile.nickname ?? '';\n    bioInput.value = profile.bio ?? '';\n    saveBtn.disabled = false;\n  }).catch(err => {\n    console.error(err);\n    saveBtn.disabled = true;\n  });\n\n  saveBtn.onclick = async () => {\n    saveBtn.disabled = true;\n    saveBtn.textContent = ''; // 초기화\n    saveBtn.append(el('ion-spinner', { name: 'crescent' }));\n    try {\n      const nickname = nicknameInput.value?.toString() || '';\n      const bio = bioInput.value?.toString() || '';\n\n      await setProfile({ nickname, bio }, token);\n\n      // 🔷 프로필 서비스 캐시도 갱신 + 이벤트 발생\n      profileService.setProfile(address, nickname, bio);\n\n      // 🔷 토스트로 알림\n      const toast = document.createElement('ion-toast');\n      toast.message = '프로필이 저장되었습니다!';\n      toast.duration = 2000;\n      toast.color = 'success';\n      document.body.appendChild(toast);\n      toast.present();\n\n      modal.dismiss(); // 닫기\n    } catch (err) {\n      console.error(err);\n      saveBtn.textContent = '실패';\n      setTimeout(() => {\n        saveBtn.textContent = '저장하기';\n      }, 2000);\n    } finally {\n      saveBtn.disabled = false;\n    }\n  };\n\n  const modalHeader = el('ion-header',\n    el('ion-toolbar',\n      el('ion-title', '프로필 편집'),\n      el('ion-buttons', { slot: 'end' },\n        el('ion-button', { onclick: () => modal.dismiss() }, '닫기')\n      ),\n    )\n  );\n\n  const modalContent = el('ion-content.ion-padding',\n    el('ion-list', nicknameInput as any, bioInput, saveBtn)\n  );\n\n  modal.append(modalHeader, modalContent);\n  return modal;\n}\n"]}