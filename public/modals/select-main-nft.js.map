{"version":3,"file":"select-main-nft.js","sourceRoot":"","sources":["../../src/modals/select-main-nft.ts"],"names":[],"mappings":"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","sourcesContent":["import { el } from '@webtaku/el';\n\nexport type NftItem = {\n  id: string;\n  name?: string;\n  image?: string | null;       // 이미지 URL(상대/절대)\n  contractAddr?: string;       // ✅ 아이템별 컨트랙트 주소(없으면 defaultContractAddr 사용)\n};\n\ntype Labels = {\n  title?: string;\n  description?: string;\n  cancel?: string;\n  confirm?: string;\n  loading?: string;\n  empty?: string;\n  loadError?: string;\n  unnamed?: string;\n};\n\ntype SelectMainNftOptions = {\n  /** 현재 컨텍스트(콜렉션)에서 아이템 로드 */\n  loadItems: () => Promise<NftItem[]>;\n  /** 선택 완료 콜백: (컨트랙트 주소, 토큰 ID) */\n  onSelected: (contractAddr: string, tokenId: string) => Promise<void> | void;\n  /** 미리 선택되어 있어야 하는 id(선택 강조용, 선택 유지) */\n  preselectedId?: string | null;\n  /** 표시 문구 커스터마이즈 */\n  labels?: Labels;\n  /** 격자 열 수 (기본 2) */\n  columns?: number;\n  /** 카드 이미지 높이 (기본 140px) */\n  cardImageHeight?: number;\n  /** ✅ 아이템에 contractAddr가 없을 때 사용할 기본 컨트랙트 주소 */\n  defaultContractAddr?: string;\n};\n\nexport function createSelectMainNftModal(options: SelectMainNftOptions) {\n  const {\n    loadItems,\n    onSelected,\n    preselectedId = null,\n    labels: L = {},\n    columns = 2,\n    cardImageHeight = 140,\n    defaultContractAddr,\n  } = options;\n\n  // 한글 디폴트 레이블\n  const t = {\n    title: L.title ?? '메인 NFT 선택',\n    description: L.description ?? '프로필 이미지로 사용할 NFT를 선택하세요.',\n    cancel: L.cancel ?? '취소',\n    confirm: L.confirm ?? '확인',\n    loading: L.loading ?? '불러오는 중…',\n    empty: L.empty ?? '표시할 NFT가 없습니다.',\n    loadError: L.loadError ?? 'NFT를 불러오지 못했습니다.',\n    unnamed: L.unnamed ?? '이름 없음',\n  };\n\n  const modal = el('ion-modal');\n\n  /* ---------- Header ---------- */\n  const header = el('ion-header',\n    el('ion-toolbar',\n      el('ion-title', t.title),\n      el('ion-buttons', { slot: 'end' },\n        el('ion-button', { onclick: () => (modal as any).dismiss?.() }, '닫기'),\n      ),\n    ),\n  );\n\n  /* ---------- Content ---------- */\n  const content = el('ion-content.ion-padding');\n\n  const desc = el('p', {\n    style: 'margin-bottom:12px;color:var(--ion-color-medium)'\n  }, t.description);\n\n  const grid = el('div', {\n    style: `\n      display:grid;\n      grid-template-columns: repeat(${Math.max(1, columns)}, minmax(0, 1fr));\n      gap:12px;\n      margin-bottom:16px;\n    `,\n  });\n\n  const statusRow = el('div', {\n    style: 'grid-column:1/-1;text-align:center;color:var(--ion-color-medium)'\n  }, t.loading);\n\n  grid.append(statusRow);\n\n  const footer = el('div', {\n    style: 'display:flex;gap:8px;justify-content:flex-end'\n  });\n\n  const cancelBtn = el('ion-button', { fill: 'outline', onclick: () => (modal as any).dismiss?.() }, t.cancel);\n  const confirmBtn = el('ion-button', { disabled: true }, t.confirm);\n  footer.append(cancelBtn, confirmBtn);\n\n  content.append(desc, grid, footer);\n  modal.append(header, content);\n\n  /* ---------- 내부 상태 ---------- */\n  // ✅ 선택 상태를 (토큰ID + 컨트랙트 주소)로 관리\n  let selected: { id: string; contract: string } | null = preselectedId\n    ? { id: preselectedId, contract: defaultContractAddr ?? '' }\n    : null;\n\n  function applySelectedStyles() {\n    Array.from(grid.children).forEach((c: any) => {\n      if (!c || typeof c.style === 'undefined') return;\n      c.style.border = '2px solid transparent';\n      c.style.boxShadow = '';\n    });\n    if (!selected?.id) return;\n    const selectedCard = grid.querySelector<HTMLElement>(`[data-id=\"${selected.id}\"]`);\n    if (selectedCard) {\n      selectedCard.style.border = '2px solid var(--ion-color-primary)';\n      selectedCard.style.boxShadow = '0 0 0 2px rgba(0,0,0,0.04) inset';\n    }\n  }\n\n  function renderItemCard(item: NftItem) {\n    const imageHeight = `${cardImageHeight}px`;\n\n    const img = el('ion-img', {\n      src: item.image || '',\n      alt: item.name || item.id,\n      style: `width:100%;height:${imageHeight};object-fit:cover;background:#111;border-bottom:1px solid rgba(255,255,255,.06)`,\n    });\n\n    // 이미지 로드 실패 시 플레이스홀더\n    const onImgError = () => {\n      const ph = el('div', {\n        style: `\n          width:100%;\n          height:${imageHeight};\n          display:flex;flex-direction:column;gap:6px;\n          align-items:center;justify-content:center;\n          background:#111;border-bottom:1px solid rgba(255,255,255,.06);\n          color:var(--ion-color-medium);font-size:12px;\n        `\n      },\n        el('ion-icon', { name: 'image' }),\n        el('div', '이미지를 불러올 수 없습니다'),\n      );\n      (img as any).replaceWith?.(ph);\n    };\n    (img as any).addEventListener?.('ionError', onImgError);\n    (img as any).onerror = onImgError as any; // native fallback\n\n    const nameText = item.name || t.unnamed;\n    const idBadge = item.id.length > 10 ? `${item.id.slice(0, 6)}…${item.id.slice(-4)}` : item.id;\n\n    const card = el('ion-card',\n      {\n        dataset: { id: item.id, contract: item.contractAddr ?? '' },\n        style: `\n          cursor:pointer;\n          transition: box-shadow .2s, transform .05s, border-color .2s;\n          border:2px solid transparent;\n          user-select:none;\n        `,\n        onclick: () => {\n          const contract = item.contractAddr ?? defaultContractAddr ?? '';\n          // 컨트랙트 주소가 없으면 선택 불가 처리\n          if (!contract) {\n            confirmBtn.disabled = true;\n            console.warn('contractAddr가 지정되지 않았습니다. defaultContractAddr 옵션을 설정하거나 아이템에 contractAddr을 제공하세요.');\n            applySelectedStyles();\n            return;\n          }\n          selected = { id: item.id, contract };\n          confirmBtn.disabled = false;\n          applySelectedStyles();\n        },\n      },\n      img,\n      el('ion-card-content',\n        el('div', {\n          style: 'display:flex;align-items:center;justify-content:space-between;gap:8px'\n        },\n          el('strong', nameText),\n          el('ion-badge', idBadge),\n        ),\n      ),\n    ) as HTMLElement;\n\n    return card;\n  }\n\n  /* ---------- 데이터 로드 ---------- */\n  (async () => {\n    try {\n      const items = await loadItems();\n      grid.innerHTML = '';\n\n      if (!items || items.length === 0) {\n        grid.append(\n          el('div', {\n            style: 'grid-column:1/-1;text-align:center;color:var(--ion-color-medium)'\n          }, t.empty)\n        );\n        confirmBtn.disabled = true;\n        return;\n      }\n\n      for (const item of items) grid.append(renderItemCard(item));\n\n      // 미리 선택된 항목 강조\n      if (selected?.id) {\n        const exists = items.some(i => i.id === selected!.id);\n        if (!exists) selected = null;\n      }\n      confirmBtn.disabled = !selected?.id || !selected?.contract;\n      applySelectedStyles();\n    } catch (e) {\n      console.error('Failed to load items', e);\n      grid.innerHTML = '';\n      grid.append(\n        el('div', {\n          style: 'grid-column:1/-1;text-align:center;color:var(--ion-color-danger)'\n        }, t.loadError)\n      );\n      confirmBtn.disabled = true;\n    }\n  })();\n\n  /* ---------- 확인 ---------- */\n  confirmBtn.onclick = async () => {\n    if (!selected?.id || !selected?.contract) return;\n    (confirmBtn as any).disabled = true;\n    try {\n      await onSelected(selected.contract, selected.id); // ✅ 컨트랙트+토큰ID 함께 전달\n      await (modal as any).dismiss?.();\n    } catch (e) {\n      console.error('Failed to set main NFT', e);\n      (confirmBtn as any).disabled = false;\n      content.append(\n        el('p', { style: 'color:var(--ion-color-danger)' }, '메인 NFT 설정에 실패했습니다. 다시 시도해 주세요.')\n      );\n    }\n  };\n\n  return modal;\n}\n"]}