{"version":3,"file":"login.js","sourceRoot":"","sources":["../../src/auth/login.ts"],"names":[],"mappings":"AAEA,KAAK,UAAU,YAAY,CAAC,OAAsB,EAAE,SAAwB;IAC1E,MAAM,QAAQ,GAAG,MAAM,KAAK,CAC1B,GAAG,YAAY,QAAQ,EACvB;QACE,MAAM,EAAE,MAAM;QACd,OAAO,EAAE,EAAE,cAAc,EAAE,kBAAkB,EAAE;QAC/C,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;YACnB,OAAO;YACP,SAAS;SACV,CAAC;KACH,CACF,CAAC;IACF,IAAI,CAAC,QAAQ,CAAC,EAAE;QAAE,MAAM,IAAI,KAAK,CAAC,aAAa,CAAC,CAAC;IACjD,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;IACnC,IAAI,CAAC,IAAI,CAAC,KAAK;QAAE,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;IAExD,OAAO,IAAI,CAAC,KAAK,CAAC;AACpB,CAAC;AAED,OAAO,EAAE,YAAY,EAAE,CAAC","sourcesContent":["declare const API_BASE_URI: string;\n\nasync function requestLogin(address: `0x${string}`, signature: `0x${string}`): Promise<string> {\n  const response = await fetch(\n    `${API_BASE_URI}/login`,\n    {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        address,\n        signature,\n      }),\n    },\n  );\n  if (!response.ok) throw new Error('로그인에 실패했습니다');\n  const data = await response.json();\n  if (!data.token) throw new Error('서버로부터 잘못된 응답을 받았습니다');\n\n  return data.token;\n}\n\nexport { requestLogin };\n"]}