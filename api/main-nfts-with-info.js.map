{"version":3,"file":"main-nfts-with-info.js","sourceRoot":"","sources":["../../src/api/main-nfts-with-info.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,MAAM,CAAC;AAuBlC;;;;GAIG;AACH,MAAM,CAAC,KAAK,UAAU,qBAAqB,CACzC,UAAkB,EAClB,SAAmB;IAEnB,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC;QAAE,OAAO,EAAE,CAAC;IAEtC,MAAM,GAAG,GAAG,UAAU,CAAC;IACvB,MAAM,UAAU,GAAG,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IAE7C,MAAM,GAAG,GAAG,MAAM,KAAK,CAAC,GAAG,YAAY,0BAA0B,EAAE;QACjE,MAAM,EAAE,MAAM;QACd,OAAO,EAAE,EAAE,cAAc,EAAE,kBAAkB,EAAE;QAC/C,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,UAAU,EAAE,GAAG,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC;KACjE,CAAC,CAAC;IAEH,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC;QACZ,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9C,OAAO,CAAC,KAAK,CAAC,iCAAiC,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,UAAU,EAAE,EAAE,IAAI,CAAC,CAAC;QACrF,MAAM,IAAI,KAAK,CAAC,wCAAwC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC;IACxE,CAAC;IAED,MAAM,IAAI,GAAsB,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC;IACjD,OAAO,IAAI,CAAC;AACd,CAAC;AAED,oBAAoB;AACpB,MAAM,CAAC,KAAK,UAAU,sBAAsB,CAC1C,UAAkB,EAClB,OAAe;IAEf,MAAM,IAAI,GAAG,MAAM,qBAAqB,CAAC,UAAU,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;IAChE,OAAO,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;AACzB,CAAC","sourcesContent":["import { getAddress } from 'viem';\n\ndeclare const API_BASE_URI: string;\n\nexport type NftDetail = {\n  nft_address: string;\n  token_id: number;\n  holder: string;\n  type?: string | null;\n  gender?: string | null;\n  parts?: string | null;\n  image?: string | null;\n};\n\nexport type MainNftWithInfo = {\n  collection: string;         // 컬렉션(방) 주소\n  user_address: string;       // 유저 주소\n  contract_addr: string;      // NFT 컨트랙트 주소\n  token_id: string;           // 메인 NFT 토큰 ID\n  selected_at: number;        // 선택 시각 (unix seconds)\n  nft: NftDetail | null;      // 상세 NFT (없을 수 있음)\n};\n\n/**\n * 여러 주소의 메인 NFT 정보를 조회 (상세 NFT 포함)\n * 서버: POST /get-main-nfts-with-info\n * body: { collection, addresses }\n */\nexport async function fetchMainNftsWithInfo(\n  collection: string,\n  addresses: string[],\n): Promise<MainNftWithInfo[]> {\n  if (addresses.length === 0) return [];\n\n  const col = collection;\n  const normalized = addresses.map(getAddress);\n\n  const res = await fetch(`${API_BASE_URI}/get-main-nfts-with-info`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ collection: col, addresses: normalized }),\n  });\n\n  if (!res.ok) {\n    const text = await res.text().catch(() => '');\n    console.error(`fetchMainNftsWithInfo failed: ${res.status} ${res.statusText}`, text);\n    throw new Error(`Failed to fetch main nfts with info: ${res.status}`);\n  }\n\n  const data: MainNftWithInfo[] = await res.json();\n  return data;\n}\n\n/** 편의: 단일 주소만 조회 */\nexport async function fetchMyMainNftWithInfo(\n  collection: string,\n  address: string,\n): Promise<MainNftWithInfo | null> {\n  const list = await fetchMainNftsWithInfo(collection, [address]);\n  return list[0] ?? null;\n}\n"]}