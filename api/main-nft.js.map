{"version":3,"file":"main-nft.js","sourceRoot":"","sources":["../../src/api/main-nft.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,6BAA6B,CAAC;AAC3D,OAAO,EAAE,UAAU,EAAE,MAAM,MAAM,CAAC;AAkBlC,MAAM,CAAC,KAAK,UAAU,cAAc,CAAC,UAAkB;IACrD,MAAM,GAAG,GAAG,MAAM,KAAK,CAAC,GAAG,YAAY,kBAAkB,EAAE;QACzD,MAAM,EAAE,MAAM;QACd,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClC,aAAa,EAAE,UAAU,YAAY,CAAC,QAAQ,EAAE,EAAE;SACnD;QACD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,aAAa;KACpD,CAAC,CAAC;IAEH,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC;QACZ,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9C,OAAO,CAAC,KAAK,CAAC,0BAA0B,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,UAAU,EAAE,EAAE,IAAI,CAAC,CAAC;QAC9E,MAAM,IAAI,KAAK,CAAC,gCAAgC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC;IAChE,CAAC;IAED,OAAO,GAAG,CAAC,IAAI,EAAE,CAAC;AACpB,CAAC;AAED;;;;GAIG;AACH,MAAM,CAAC,KAAK,UAAU,UAAU,CAAC,MAAwB;IACvD,MAAM,IAAI,GAAG;QACX,UAAU,EAAE,MAAM,CAAC,UAAU;QAC7B,aAAa,EAAE,UAAU,CAAC,MAAM,CAAC,YAAY,CAAC;QAC9C,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC;KACjC,CAAC;IAEF,MAAM,GAAG,GAAG,MAAM,KAAK,CAAC,GAAG,YAAY,eAAe,EAAE;QACtD,MAAM,EAAE,MAAM;QACd,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClC,aAAa,EAAE,UAAU,YAAY,CAAC,QAAQ,EAAE,EAAE;SACnD;QACD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;KAC3B,CAAC,CAAC;IAEH,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC;QACZ,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9C,OAAO,CAAC,KAAK,CAAC,sBAAsB,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,UAAU,EAAE,EAAE,IAAI,CAAC,CAAC;QAC1E,MAAM,IAAI,KAAK,CAAC,2BAA2B,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC;IAC3D,CAAC;IAED,OAAO,GAAG,CAAC,IAAI,EAAE,CAAC;AACpB,CAAC","sourcesContent":["import { tokenManager } from \"@gaiaprotocol/client-common\";\nimport { getAddress } from \"viem\";\n\ndeclare const API_BASE_URI: string;\n\nexport interface MainNftData {\n  collection: string;              // 컬렉션(방) 주소\n  user_address: string;            // 조회 계정 주소\n  contract_addr?: string;          // NFT 컨트랙트 주소\n  token_id?: string;               // 토큰 ID (문자열로 보관 권장)\n  selected_at?: number;            // 선택 시각 (unix seconds)\n}\n\nexport interface SetMainNftParams {\n  collection: string;              // 방(=콜렉션) 주소\n  contractAddr: string;            // NFT 컨트랙트 주소\n  tokenId: string | number;        // 토큰 ID\n}\n\nexport async function fetchMyMainNft(collection: string): Promise<MainNftData> {\n  const res = await fetch(`${API_BASE_URI}/get-my-main-nft`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      authorization: `Bearer ${tokenManager.getToken()}`,\n    },\n    body: JSON.stringify({ collection }), // ✅ body로 보냄\n  });\n\n  if (!res.ok) {\n    const text = await res.text().catch(() => \"\");\n    console.error(`fetchMyMainNft failed: ${res.status} ${res.statusText}`, text);\n    throw new Error(`Failed to fetch my main nft: ${res.status}`);\n  }\n\n  return res.json();\n}\n\n/**\n * 메인 NFT 설정 (현재 인증된 계정)\n * 서버 라우팅: POST /set-main-nft\n * body: { collection, contract_addr, token_id }\n */\nexport async function setMainNft(params: SetMainNftParams): Promise<{ success: boolean }> {\n  const body = {\n    collection: params.collection,\n    contract_addr: getAddress(params.contractAddr),\n    token_id: String(params.tokenId),\n  };\n\n  const res = await fetch(`${API_BASE_URI}/set-main-nft`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      authorization: `Bearer ${tokenManager.getToken()}`,\n    },\n    body: JSON.stringify(body),\n  });\n\n  if (!res.ok) {\n    const text = await res.text().catch(() => \"\");\n    console.error(`setMainNft failed: ${res.status} ${res.statusText}`, text);\n    throw new Error(`Failed to set main nft: ${res.status}`);\n  }\n\n  return res.json();\n}\n"]}